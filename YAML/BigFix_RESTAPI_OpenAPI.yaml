openapi: 3.0.3
info:
  title: BigFix REST API
  description: |
    This is a work in progress and not yet complete.
    This is the OpenAPI definition for the HCL BigFix REST API.
    The BigFix REST API allows you to interact with the BigFix server programmatically to automate tasks,
    retrieve information about endpoints, and manage content.

    The BigFix REST API documentation is here:
      [https://developer.bigfix.com/rest-api/api/](https://developer.bigfix.com/rest-api/api/)
  version: "0.1.2"
  contact:
    name: HCL BigFix Support
    url: https://www.hcltech.com/bigfix/support
servers:
  - url: https://{your-bigfix-server}:52311/api
    description: The main BigFix server REST API endpoint.
    variables:
      your-bigfix-server:
        default: localhost
        description: The hostname or IP address of your BigFix server.
security:
  - basicAuth: []
paths:
  /login:
    post:
      summary: Login to the API
      description: Authenticates a user and establishes a session. While the API uses HTTP Basic Auth for each request, this endpoint can be used to verify credentials.
      tags:
        - Authentication
      responses:
        '200':
          description: Authentication successful.
        '401':
          description: Authentication failed.
  /actions:
    get:
      summary: Get a list of actions
      description: Retrieves a list of all actions.
      tags:
        - Actions
      responses:
        '200':
          description: A list of actions.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
    post:
      summary: Create a new action
      description: Creates a new action from an action XML document.
      tags:
        - Actions
      requestBody:
        description: The action to create, in XML format.
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/BES'
      responses:
        '200':
          description: The created action.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
        '400':
          description: Bad request.
  /action/{id}:
    get:
      summary: Get an action
      description: Retrieves a specific action by its ID.
      tags:
        - Actions
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the action to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested action.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
        '404':
          description: Action not found.
  /action/{id}/status:
    get:
      summary: Get action status
      description: Retrieves the status of a specific action.
      tags:
        - Actions
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the action.
          schema:
            type: integer
      responses:
        '200':
          description: The status of the action.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ActionResults'
        '404':
          description: Action not found.
  /computers:
    get:
      summary: Get a list of computers
      description: Retrieves a list of all computers.
      tags:
        - Computers
      responses:
        '200':
          description: A list of computers.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /computer/{id}:
    get:
      summary: Get a computer
      description: Retrieves a specific computer by its ID.
      tags:
        - Computers
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the computer to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The requested computer.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
        '404':
          description: Computer not found.
  /sites:
    get:
      summary: Get a list of sites
      description: Retrieves a list of all available sites.
      tags:
        - Sites
      responses:
        '200':
          description: A list of sites.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /baselines/{site_type}/{site_name}:
    get:
      summary: Get a list of baselines
      description: Retrieves a list of baselines from a specific site.
      tags:
        - Baselines
      parameters:
        - $ref: '#/components/parameters/SiteType'
        - $ref: '#/components/parameters/SiteName'
      responses:
        '200':
          description: A list of baselines.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /baseline/{site_type}/{site_name}/{id}:
    get:
      summary: Get a specific baseline
      description: Retrieves a specific baseline by its ID from a given site.
      tags:
        - Baselines
      parameters:
        - $ref: '#/components/parameters/SiteType'
        - $ref: '#/components/parameters/SiteName'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: The requested baseline.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
        '404':
          description: Baseline not found.
  /tasks/{site_type}/{site_name}:
    get:
      summary: Get a list of tasks
      description: Retrieves a list of tasks from a specific site.
      tags:
        - Tasks
      parameters:
        - $ref: '#/components/parameters/SiteType'
        - $ref: '#/components/parameters/SiteName'
      responses:
        '200':
          description: A list of tasks.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /fixlets/{site_type}/{site_name}:
    get:
      summary: Get Fixlets from a site
      description: Retrieves a list of all Fixlets in a specific site.
      tags:
        - Fixlets
      parameters:
        - $ref: '#/components/parameters/SiteType'
        - $ref: '#/components/parameters/SiteName'
      responses:
        '200':
          description: A list of Fixlets.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /fixlet/{site_type}/{site_name}/{id}:
    get:
      summary: Get a Fixlet
      description: Retrieves a specific Fixlet from a site by its ID.
      tags:
        - Fixlets
      parameters:
        - $ref: '#/components/parameters/SiteType'
        - $ref: '#/components/parameters/SiteName'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: The requested Fixlet.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
        '404':
          description: Fixlet not found.
  /analyses/{site_type}/{site_name}:
    get:
      summary: Get a list of analyses
      description: Retrieves a list of analyses from a specific site.
      tags:
        - Analyses
      parameters:
        - $ref: '#/components/parameters/SiteType'
        - $ref: '#/components/parameters/SiteName'
      responses:
        '200':
          description: A list of analyses.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /query:
    get:
      summary: Execute a Relevance query
      description: Executes a Relevance query and returns the results.
      tags:
        - Query
      parameters:
        - name: relevance
          in: query
          required: true
          description: The Relevance query to execute.
          schema:
            type: string
      responses:
        '200':
          description: The results of the Relevance query.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/BESAPI'
  /upload:
    post:
      summary: Upload a file
      description: Uploads a file to the BigFix server.
      tags:
        - Utilities
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: File uploaded successfully.
        '400':
          description: Bad request.
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    SiteType:
      name: site_type
      in: path
      required: true
      description: The type of the site (e.g., master, custom, operator, external).
      schema:
        type: string
    SiteName:
      name: site_name
      in: path
      required: true
      description: The name of the site.
      schema:
        type: string
    Id:
      name: id
      in: path
      required: true
      description: The ID of the resource.
      schema:
        type: integer
  schemas:
    BES:
      type: object
      xml:
        name: BES
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        Fixlet:
          $ref: '#/components/schemas/Fixlet'
        Analysis:
          $ref: '#/components/schemas/Analysis'
        Baseline:
          $ref: '#/components/schemas/Baseline'
        Task:
          $ref: '#/components/schemas/Task'
        ComputerGroup:
          $ref: '#/components/schemas/ComputerGroup'
    BESAPI:
      type: object
      xml:
        name: BESAPI
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        Computer:
          $ref: '#/components/schemas/Computer'
        Fixlet:
          $ref: '#/components/schemas/Fixlet'
        Analysis:
          $ref: '#/components/schemas/Analysis'
        Query:
          $ref: '#/components/schemas/Query'
        Site:
          $ref: '#/components/schemas/Site'
        Baseline:
          $ref: '#/components/schemas/Baseline'
        Task:
          $ref: '#/components/schemas/Task'
        ComputerGroup:
          $ref: '#/components/schemas/ComputerGroup'
    Action:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
        State:
          type: string
    Computer:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
        OS:
          type: string
        LastReportTime:
          type: string
          format: date-time
    Fixlet:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
        Category:
          type: string
        Source:
          type: string
    Task:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
    Baseline:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
    ComputerGroup:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
    Site:
      type: object
      properties:
        Name:
          type: string
        Type:
          type: string
        URL:
          type: string
    Analysis:
      type: object
      properties:
        ID:
          type: integer
        Name:
          type: string
        Source:
          type: string
    Query:
      type: object
      properties:
        Result:
          type: array
          items:
            type: object
        Evaluation:
          type: object
          properties:
            Time:
              type: string
            Plural:
              type: boolean
    ActionResults:
      type: object
      xml:
        name: ActionResults
      properties:
        Action:
          type: array
          items:
            $ref: '#/components/schemas/Action'
